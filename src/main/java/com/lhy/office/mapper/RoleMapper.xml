<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.lhy.office.mapper.RoleMapper">

	<!-- 角色信息结果集(含级联数据)-->
	<resultMap id="CascadeResultMap" type="com.lhy.office.entity.Role" >
		<id column="roleid" jdbcType="INTEGER" property="roleId"/>
		<result column="rolename" jdbcType="VARCHAR" property="roleName"/>
		<result column="roledesc" jdbcType="VARCHAR" property="roleDesc"/>
		<result column="rolestate" jdbcType="INTEGER" property="roleState"/>
	<!-- 设置角色和功能的多对多关联关系 -->
		<collection property="functionList" ofType="com.lhy.office.entity.Function">
			<id column="funid" property="funId"></id>
			<result column="funname" property="funName"/>
			<result column="funurl" property="funUrl"/>
			<result column="funpid" property="funPid"/>
			<result column="funstate" property="funState"/>
		</collection>	
	</resultMap>
	
	<!-- 基本数据 -->
	<resultMap id="BaseResultMap" type="com.lhy.office.entity.Role" >
		<id column="roleid" jdbcType="INTEGER" property="roleId"/>
		<result column="rolename" jdbcType="VARCHAR" property="roleName"/>
		<result column="roledesc" jdbcType="VARCHAR" property="roleDesc"/>
		<result column="rolestate" jdbcType="INTEGER" property="roleState"/>
	</resultMap>
	
	<!-- 级联查询的基本语句 -->
	<sql id="cascadeSelect">
		select
			role.roleid,
			role.rolename,
			role.roledesc,
			role.rolestate,
			fun.funid,
			fun.funname,
			fun.funpid,
			fun.funurl,
			fun.funstate
		from tb_role role
		left join
			tb_roleright on tb_roleright.role_id = role.roleid
		left join 
			tb_function fun on tb_roleright.fun_id = fun.funid
	</sql>
	
	<sql id="WhereAndOrderBy">
		<if test="roleId!=null">
			and roleid=#{roleId}
		</if>
		<if test="roleName!=null">
			and rolename=#{roleName}
		</if>	
		<if test="roleDesc!=null">
			and roledesc=#{roleDesc}
		</if>
		<if test="roleState!=null">
			and rolestate=#{roleState}
		</if>
		ORDER BY
		roleid DESC
	</sql>
	
	<!-- 按主键查询角色信息(级联) -->
	<select id="queryFunctionByRoleId" parameterType="Integer" resultMap="CascadeResultMap">
		<!-- 引入级联查询sql -->
		<include refid="cascadeSelect"></include>
		<!-- 加上查询条件 -->
		where role.roleid=#{roleId,jdbcType=INTEGER}
		order by
		fun.funid asc
	</select>
	
	<select id="selectByKeywordCascade" parameterType="com.lhy.office.entity.Role" resultMap="CascadeResultMap">
		<!-- 引入级联查询sql -->
		<include refid="cascadeSelect"/>
		<!-- 加上条件 -->
		 where 1=1
		<include refid="WhereAndOrderBy"></include>
	</select>
	
	<select id="getRoles" parameterType="com.lhy.office.entity.Role" resultMap="BaseResultMap">
		select 
			role.roleid,
			role.rolename,
			role.roledesc,
			role.rolestate
		from 
			tb_role role
		where 1=1
		<include refid="WhereAndOrderBy"></include>
	</select>
	
	<update id="updateRole" parameterType="com.lhy.office.entity.Role">
		update
			tb_role
		<set>
			<if test="roleName!=null">
				rolename = #{roleName},
			</if>
			<if test="roleDesc!=null">
				roledesc = #{roleDesc},
			</if>
			<if test="roleState!=null">
				rolestate = #{roleState},
			</if>
		</set>
		where
			roleid=#{roleId}
	</update>
	
	<delete id="deleteRoleRight" parameterType="INTEGER">
		delete from tb_roleright where role_id=#{roleId}
	</delete>
	
	<insert id="addRoleRight">
		insert into 
			tb_roleright(role_id,fun_id)
		values
			(#{roleId},#{funId})
	</insert>
	
	<insert id="addRole" parameterType="com.lhy.office.entity.Role">
		insert into
		tb_role
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="roleName!=null">
				rolename,
			</if>
			<if test="roleDesc!=null">
				roledesc,
			</if>
			<if test="roleState!=null">
				rolestate,
			</if>
		</trim>
		<trim prefix="values(" suffix=")" suffixOverrides=",">
			<if test="roleName!=null">
				#{roleName},
			</if>
			<if test="roleDesc!=null">
				#{roleDesc},
			</if>
			<if test="roleState!=null">
				#{roleState},
			</if>
		</trim>
	</insert>

</mapper>

